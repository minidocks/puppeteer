--- lib/Launcher.js
+++ lib/Launcher.js
@@ -20,4 +20,5 @@
 const URL = require('url');
+const dns = require('dns');
 const removeFolder = require('rimraf');
 const childProcess = require('child_process');
 const BrowserFetcher = require('./BrowserFetcher');
@@ -95,7 +96,7 @@
       timeout = 30000
     } = options;

-    const chromeArguments = [];
+    let chromeArguments = [];
     if (!ignoreDefaultArgs)
       chromeArguments.push(...this.defaultArgs(options));
     else if (Array.isArray(ignoreDefaultArgs))
@@ -103,10 +104,27 @@
     else
       chromeArguments.push(...args);

+    for (let key in process.env) {
+      if (key.startsWith('PUPPETEER_ARG_')) {
+        chromeArguments.push('--' + key.substr(14).replace(/_/g, '-').toLowerCase() + '=' + process.env[key]);
+      }
+    }
+
     let temporaryUserDataDir = null;

-    if (!chromeArguments.some(argument => argument.startsWith('--remote-debugging-')))
+    if (!chromeArguments.some(argument => argument.startsWith('--remote-debugging-'))) {
       chromeArguments.push(pipe ? '--remote-debugging-pipe' : '--remote-debugging-port=0');
+    } else {
+      chromeArguments = await Promise.all(chromeArguments.map(async argument => {
+        if (argument.startsWith('--remote-debugging-address=')) {
+          const result = await dns.promises.lookup(argument.split('=', 2)[1]);
+          argument = '--remote-debugging-address=' + result.address;
+        }
+
+        return argument;
+      }));
+    }
+
     if (!chromeArguments.some(arg => arg.startsWith('--user-data-dir'))) {
       temporaryUserDataDir = await mkdtempAsync(CHROME_PROFILE_PATH);
       chromeArguments.push(`--user-data-dir=${temporaryUserDataDir}`);
